pipeline {
    agent any

    environment {
        MAVEN_HOME = '/opt/maven'
        PATH = "${MAVEN_HOME}/bin:${env.PATH}"
        TARGET_SERVER = 'ec2-user@184.72.69.1' // Update with the actual user and IP of your target server
        TARGET_PATH = '/u01' // Path on the target server
        JAR_NAME = 'swagger-configuration-0.0.1-SNAPSHOT.jar'
        SSH_CREDENTIALS_ID = 'my-pem' // ID of the stored PEM key in Jenkins
    }

    stages {
        stage('Clean Workspace') {
            steps {
                echo 'Cleaning workspace...'
                deleteDir() // This will clean the workspace
            }
        }

        stage('Checkout') {
            steps {
                echo 'Checking out code from Git...'
                script {
                    try {
                        git branch: 'main', url: 'https://github.com/Bhargavjmr/swagger-01.git'
                    } catch (Exception e) {
                        echo "Error checking out code: ${e.message}"
                        currentBuild.result = 'FAILURE'
                        error("Stopping pipeline due to checkout error.")
                    }
                }
            }
        }

        stage('Build') {
            steps {
                dir('/var/lib/jenkins/workspace/CICD') {
                    echo 'Building the JAR file...'
                    sh 'mvn clean package'
                }
            }
            post {
                success {
                    echo 'Archiving the JAR file...'
                    archiveArtifacts artifacts: '**/target/*.jar', allowEmptyArchive: true
                }
            }
        }

        stage('Upload to S3') {
            steps {
                script {
                    echo 'Uploading artifact to S3...'
                    sh '''
                        ARTIFACT=$(ls /var/lib/jenkins/workspace/CICD/target/*.jar)
                        aws s3 cp $ARTIFACT s3://jumchuk/
                    '''
                }
            }
        }

        stage('Copy to Target Server') {
            steps {
                script {
                    echo 'Copying artifact to target server...'
                    withCredentials([sshUserPrivateKey(credentialsId: env.SSH_CREDENTIALS_ID, keyFileVariable: 'PEM_KEY')]) {
                        sh '''
                            echo "Using PEM key: $PEM_KEY"
                            scp -i $PEM_KEY /var/lib/jenkins/workspace/CICD/target/${JAR_NAME} ${TARGET_SERVER}:${TARGET_PATH}/
                        '''
                    }
                }
            }
        }

        stage('Run JAR on Target Server') {
            steps {
                script {
                    echo 'Running the JAR on the target server...'
                    withCredentials([sshUserPrivateKey(credentialsId: env.SSH_CREDENTIALS_ID, keyFileVariable: 'PEM_KEY')]) {
                        sh '''
                            echo "Using PEM key: $PEM_KEY"
                            ssh -i $PEM_KEY ${TARGET_SERVER} "sudo nohup java -Dspring.profiles.active=mysql -jar ${TARGET_PATH}/${JAR_NAME} >> ${TARGET_PATH}/state-notification.log 2>&1 &"
                        '''
                    }
                }
            }
        }
    }
}
